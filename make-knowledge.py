import requests
from bs4 import BeautifulSoup
import json
import tqdm

import time

urls = [
    "/docs/reference/",
    "/docs/reference/data-loading/",
    "/docs/reference/data-loading/cbor/",
    "/docs/reference/data-loading/csv/",
    "/docs/reference/data-loading/json/",
    "/docs/reference/data-loading/read/",
    "/docs/reference/data-loading/toml/",
    "/docs/reference/data-loading/xml/",
    "/docs/reference/data-loading/yaml/",
    "/docs/reference/foundations/",
    "/docs/reference/foundations/arguments/",
    "/docs/reference/foundations/array/",
    "/docs/reference/foundations/assert/",
    "/docs/reference/foundations/bool/",
    "/docs/reference/foundations/bytes/",
    "/docs/reference/foundations/calc",
    "/docs/reference/foundations/content/",
    "/docs/reference/foundations/datetime/",
    "/docs/reference/foundations/dictionary/",
    "/docs/reference/foundations/duration/",
    "/docs/reference/foundations/eval/",
    "/docs/reference/foundations/float/",
    "/docs/reference/foundations/function/",
    "/docs/reference/foundations/int/",
    "/docs/reference/foundations/label/",
    "/docs/reference/foundations/module/",
    "/docs/reference/foundations/panic/",
    "/docs/reference/foundations/plugin/",
    "/docs/reference/foundations/regex/",
    "/docs/reference/foundations/repr/",
    "/docs/reference/foundations/selector/",
    "/docs/reference/foundations/str/",
    "/docs/reference/foundations/style/",
    "/docs/reference/foundations/sys",
    "/docs/reference/foundations/type/",
    "/docs/reference/foundations/version/",
    "/docs/reference/introspection/",
    "/docs/reference/introspection/counter/",
    "/docs/reference/introspection/locate/",
    "/docs/reference/introspection/location/",
    "/docs/reference/introspection/metadata/",
    "/docs/reference/introspection/query/",
    "/docs/reference/introspection/state/",
    "/docs/reference/layout/",
    "/docs/reference/layout/align/",
    "/docs/reference/layout/alignment/",
    "/docs/reference/layout/angle/",
    "/docs/reference/layout/block/",
    "/docs/reference/layout/box/",
    "/docs/reference/layout/colbreak/",
    "/docs/reference/layout/columns/",
    "/docs/reference/layout/direction/",
    "/docs/reference/layout/fraction/",
    "/docs/reference/layout/grid/",
    "/docs/reference/layout/h/",
    "/docs/reference/layout/hide/",
    "/docs/reference/layout/layout/",
    "/docs/reference/layout/length/",
    "/docs/reference/layout/measure/",
    "/docs/reference/layout/move/",
    "/docs/reference/layout/pad/",
    "/docs/reference/layout/page/",
    "/docs/reference/layout/pagebreak/",
    "/docs/reference/layout/place/",
    "/docs/reference/layout/ratio/",
    "/docs/reference/layout/relative/",
    "/docs/reference/layout/repeat/",
    "/docs/reference/layout/rotate/",
    "/docs/reference/layout/scale/",
    "/docs/reference/layout/stack/",
    "/docs/reference/layout/v/",
    "/docs/reference/math/",
    "/docs/reference/math/accent/",
    "/docs/reference/math/attach",
    "/docs/reference/math/cancel/",
    "/docs/reference/math/cases/",
    "/docs/reference/math/class/",
    "/docs/reference/math/equation/",
    "/docs/reference/math/frac/",
    "/docs/reference/math/lr",
    "/docs/reference/math/mat/",
    "/docs/reference/math/op/",
    "/docs/reference/math/roots",
    "/docs/reference/math/sizes",
    "/docs/reference/math/styles",
    "/docs/reference/math/underover",
    "/docs/reference/math/variants",
    "/docs/reference/math/vec/",
    "/docs/reference/model/",
    "/docs/reference/model/bibliography/",
    "/docs/reference/model/cite/",
    "/docs/reference/model/document/",
    "/docs/reference/model/emph/",
    "/docs/reference/model/enum/",
    "/docs/reference/model/figure/",
    "/docs/reference/model/footnote/",
    "/docs/reference/model/heading/",
    "/docs/reference/model/link/",
    "/docs/reference/model/list/",
    "/docs/reference/model/numbering/",
    "/docs/reference/model/outline/",
    "/docs/reference/model/par/",
    "/docs/reference/model/parbreak/",
    "/docs/reference/model/quote/",
    "/docs/reference/model/ref/",
    "/docs/reference/model/strong/",
    "/docs/reference/model/table/",
    "/docs/reference/model/terms/",
    "/docs/reference/scripting/",
    "/docs/reference/styling/",
    "/docs/reference/symbols/",
    "/docs/reference/symbols/emoji/",
    "/docs/reference/symbols/sym/",
    "/docs/reference/symbols/symbol/",
    "/docs/reference/syntax/",
    "/docs/reference/text/",
    "/docs/reference/text/highlight/",
    "/docs/reference/text/linebreak/",
    "/docs/reference/text/lorem/",
    "/docs/reference/text/lower/",
    "/docs/reference/text/overline/",
    "/docs/reference/text/raw/",
    "/docs/reference/text/smallcaps/",
    "/docs/reference/text/smartquote/",
    "/docs/reference/text/strike/",
    "/docs/reference/text/sub/",
    "/docs/reference/text/super/",
    "/docs/reference/text/text/",
    "/docs/reference/text/underline/",
    "/docs/reference/text/upper/",
    "/docs/reference/visualize/",
    "/docs/reference/visualize/circle/",
    "/docs/reference/visualize/color/",
    "/docs/reference/visualize/ellipse/",
    "/docs/reference/visualize/gradient/",
    "/docs/reference/visualize/image/",
    "/docs/reference/visualize/line/",
    "/docs/reference/visualize/path/",
    "/docs/reference/visualize/pattern/",
    "/docs/reference/visualize/polygon/",
    "/docs/reference/visualize/rect/",
    "/docs/reference/visualize/square/",
    "/docs/reference/visualize/stroke/",
]

data = []

for url in tqdm.tqdm(urls):
    url = f"https://typst.app{url}"
    # Fetch the page content
    response = requests.get(url)
    soup = BeautifulSoup(response.content, "html.parser")

    # Extract title and content (example, adjust selectors as needed)
    title = soup.find("h1").text
    # Find the main tag and get all its text content
    content = str(soup.find("main"))

    # Append the data
    data.append({"title": title, "content": content, "url": url})
    time.sleep(1)

# Convert the data list to JSON
with open('data.json', 'w', encoding='utf-8') as f:
    json.dump(data, f, ensure_ascii=False, indent=2)
